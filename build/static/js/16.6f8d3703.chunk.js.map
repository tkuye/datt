{"version":3,"sources":["components/Admin/EditUser.tsx","components/Admin/UserAdmin.tsx","components/Admin/Home.tsx"],"names":["EditUser","dname","ddescription","dlocation","useState","name","setName","description","setDescription","image","setImage","fileType","setFileType","fileVideoType","setFileVideoType","video","setVideo","vidMessage","setVidMessage","imageMessage","setImageMessage","fileEl","useRef","type","context","useContext","RunningContext","videoEl","console","log","options","maxSizeMB","getImage","e","id","a","reader","FileReader","target","files","includes","imageCompression","compressedFile","onloadend","previewImage","document","getElementById","src","result","style","display","readAsDataURL","Home","value","onChange","ref","color","width","padding","marginBottom","onClick","current","click","getVideo","alt","getCookie","axios","post","key","encodeURIComponent","vidtype","then","res","optionsVideo","headers","ax","put","data","running","imgtype","Promise","all","catch","err","UserAdmin","getUserEdit","className","get","params","url","rows","row","getUserInfo","Consumer"],"mappings":"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","file":"static/js/16.6f8d3703.chunk.js","sourcesContent":["import React, {useState, useRef, useContext} from 'react'\r\nimport axios from '../../axInstance'\r\nimport getCookie from '../../getCookie'\r\nimport Home from './Home'\r\nimport ax from 'axios'\r\nimport {RunningContext} from './AdminPanel'\r\nimport imageCompression from 'browser-image-compression';\r\ninterface EditUserProps {\r\n    dname:string;\r\n    ddescription:string;\r\n    dlocation:any;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst EditUser: React.FC<EditUserProps> = ({dname,ddescription, dlocation}) => {\r\n    const [name, setName] = useState(dname)\r\n    const [description, setDescription] = useState(ddescription)\r\n    const [image, setImage] = useState<any>(null)\r\n    const [fileType, setFileType] = useState('')\r\n    const [fileVideoType, setFileVideoType] = useState('')\r\n    const [video, setVideo] = useState<any>(null)\r\n    const [vidMessage, setVidMessage] = useState('')\r\n    const [imageMessage, setImageMessage] = useState('')\r\n    const fileEl = useRef<any>(<input type=\"file\" />) \r\n    const context = useContext(RunningContext)\r\n    const videoEl = useRef<any>(<input type=\"file\"/>)\r\n    console.log(dlocation)\r\n    const options = {\r\n        maxSizeMB:0.1\r\n    }\r\n\r\n    const getImage = async (e:any, id:string) => {\r\n        var reader = new FileReader();\r\n        if (!e.target.files[0].type.includes(\"image\")) {\r\n            setImageMessage('That file is not an image.')\r\n            return\r\n        }\r\n        else {\r\n            setImageMessage('')\r\n        }\r\n        setFileType(e.target.files[0].type)\r\n        let compressedFile = await  imageCompression(e.target.files[0], options)\r\n       await setImage(compressedFile);\r\n       console.log(e.target.files[0])\r\n        reader.onloadend = (e) => {\r\n            let previewImage = document.getElementById(id) as HTMLImageElement\r\n            previewImage.src = reader.result as string \r\n            if (dlocation === \"\") {\r\n                previewImage.style.display = \"block\"\r\n            }\r\n            \r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n}   \r\n    const getVideo = (e:any) => {\r\n        setVidMessage('Video successfully loaded.')\r\n        console.log(e.target.files[0])\r\n        if (!e.target.files[0].type.includes(\"video\")) {\r\n            setVidMessage('That file is not a video.')\r\n            return\r\n        }\r\n        \r\n        let reader = new FileReader()\r\n            setFileVideoType(e.target.files[0].type)\r\n            setVideo(e.target.files[0])\r\n        reader.onloadend = (e) => {\r\n            console.log(e)\r\n        }\r\n        reader.readAsDataURL(e.target.files[0])\r\n    }\r\n    \r\n    const clickButton = () => {\r\n        fileEl.current.click();\r\n        \r\n    }   \r\n    \r\n    const clickButtonVideo = () => {\r\n        videoEl.current.click();\r\n        \r\n    }   \r\n\r\n    \r\n\r\n    const formSubmit = () => {\r\n        \r\n        if (vidMessage !== 'Video successfully loaded.') return\r\n        if (imageMessage !== '') return\r\n        let id = getCookie('userid')\r\n        \r\n        if (!image && !video) {\r\n            axios.post('/user', {\r\n                name:name, \r\n                description:description, \r\n                id:id, \r\n            }).then(() => {\r\n                context.running()\r\n            })\r\n        }\r\n        else if (!image && video) {\r\n            axios.post('/user', {\r\n                name:name, \r\n                description:description, \r\n                id:id, \r\n                key:encodeURIComponent(name),\r\n                vidtype:fileVideoType\r\n            }).then(res => {\r\n                const optionsVideo = {\r\n                    headers: {\r\n                        'Content-Type':fileVideoType\r\n                      }\r\n                }\r\n                ax.put(res.data, video, optionsVideo).then(() => {\r\n                    context.running()\r\n                })\r\n            })\r\n        }\r\n        else if (image && !video) {\r\n            axios.post('/user', {\r\n                name:name, \r\n                description:description, \r\n                id:id, \r\n                key:encodeURIComponent(name),\r\n                imgtype:fileType\r\n            }).then(res => {\r\n                const options = {\r\n                    headers: {\r\n                        'Content-Type':fileType\r\n                      }\r\n                }\r\n                ax.put(res.data, image, options).then(() => {\r\n                    context.running()\r\n                })\r\n            })\r\n        }\r\n        else {\r\n        axios.post('/user', {\r\n            name:name, \r\n            description:description, \r\n            id:id, \r\n            key:encodeURIComponent(name),\r\n            imgtype:fileType,\r\n            vidtype:fileVideoType\r\n        }).then(res => {\r\n            const options = {\r\n                headers: {\r\n                    'Content-Type':fileType\r\n                  }\r\n            }\r\n            const optionsVideo = {\r\n                headers: {\r\n                    'Content-Type':fileVideoType\r\n                  }\r\n            }\r\n           console.log(res.data)\r\n\r\n                Promise.all([ax.put(res.data.image,image, options), ax.put(res.data.video, video, optionsVideo)]).then(() => {\r\n                    context.running()\r\n                })\r\n            })\r\n        \r\n\r\n           .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    }\r\n        return (<div>\r\n            <Home />\r\n            <div id=\"edit-user\">\r\n            <h3>Name</h3>\r\n            \r\n            <input type=\"text\" id=\"title\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n            <h3>Description</h3>\r\n            <textarea id=\"details\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n            <h3>Image File</h3>\r\n            <input type=\"file\" name=\"image\" style={{display:'none'}}id=\"image\" onChange={(e) => getImage(e, 'detail-photo')} ref={fileEl}/>\r\n            <button style={{color: 'black', width:'fit-content', padding:\"10px\", marginBottom:\"20px\"}} onClick={clickButton}>Upload Your Image</button><br />\r\n            \r\n            <input type=\"file\" name=\"video\" style={{display:'none'}}id=\"video\" onChange={(e) => getVideo(e)} ref={videoEl}/>\r\n            {dlocation!==\"\"?<img src={dlocation} alt=\"preview\" id=\"detail-photo\" />:<img src=\"\" alt=\"preview\" id=\"detail-photo\" style={{display:'none'}}/>}<br />\r\n            <button style={{color: 'black', width:'fit-content', padding:\"10px\", marginBottom:\"20px\"}} onClick={clickButtonVideo}>Upload Your Video</button>\r\n            <h4>{vidMessage}</h4>\r\n            <input type=\"submit\" value=\"Set Description\" id=\"submit\" onClick={formSubmit}/>\r\n           \r\n        </div>\r\n        </div>);\r\n}\r\n\r\nexport default EditUser","import React from 'react'\r\nimport EditUser from './EditUser';\r\nimport axios from '../../axInstance'\r\nimport getCookie from '../../getCookie'\r\ninterface UserAdminProps {\r\n    getUserEdit:(components:JSX.Element) => void\r\n}\r\n\r\nconst UserAdmin: React.FC<UserAdminProps> = ({getUserEdit}) => {\r\n        const getUserInfo = () => {\r\n            \r\n            let id = getCookie('userid')\r\n        \r\n            axios.get('/user', {\r\n                params:{\r\n                    id: id\r\n                }\r\n\r\n            }).then(res => {\r\n                \r\n                console.log(res.data.url)\r\n               \r\n                \r\n                \r\n                if(res.data.rows !== \"\") {\r\n                    let row = res.data.rows[0]\r\n                getUserEdit(<EditUser dname={row.name} ddescription={row.description} dlocation={res.data.url}/>)\r\n            } else {\r\n                getUserEdit(<EditUser dname={\"\"} ddescription={\"\"} dlocation={\"\"}/>)\r\n            }\r\n        })\r\n        }\r\n        return (<div className=\"user-admin\" onClick={() => getUserInfo()}>\r\n            <h2>Click Here to Edit User</h2>\r\n            </div>);\r\n}\r\nexport default UserAdmin","import React from 'react'\r\nimport {RunningContext} from './AdminPanel'\r\ninterface HomeProps {\r\n\r\n}\r\n\r\nconst Home: React.FC<HomeProps> = () => {\r\n\r\n        return (<div>\r\n                <RunningContext.Consumer >\r\n                    {(value:any) => {\r\n                        return (\r\n                        <h3 onClick ={() => value.running()} id=\"home\">Go Home</h3>\r\n                        )}}\r\n            \r\n            </RunningContext.Consumer>\r\n        </div>);\r\n}\r\nexport default Home"],"sourceRoot":""}