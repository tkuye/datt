{"version":3,"sources":["components/Member.tsx","components/MemberImage.tsx","Team.tsx","App.tsx","components/Emails.tsx","index.tsx","axInstance.ts"],"names":["Member","name","description","className","MemberImage","image","src","alt","Team","useState","users","setUsers","images","setImages","context","useContext","UserContext","useEffect","status","console","log","map","user","Emails","Navigation","lazy","Home","Event","Admin","BlogContainer","Footer","Contact","history","createHistory","EventContext","React","createContext","BlogContext","CurrentBlogContext","CurrentEventContext","UpcomingContext","CarouselContext","fallBack","App","blogs","setBlogs","events","setEvents","currentEvent","setCurrentEvent","upcomingEvents","setUpcomingEvents","carousel","setCarousel","isMounted","source","Axios","CancelToken","axios","get","then","response","data","cancelToken","token","res","filter","event","upcoming","window","location","href","includes","eventName","split","slice","event_name","join","toLowerCase","url","urlData","cancel","fallback","Provider","value","getEvents","exact","path","inputEl","useRef","id","type","placeholder","ref","onClick","signedUp","document","getElementById","RegExp","test","current","innerHTML","classList","add","style","display","scrollTo","body","scrollHeight","post","email","remove","setTimeout","ReactDOM","render","StrictMode","create","baseURL","headers"],"mappings":"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","file":"static/js/main.6fe58b1a.chunk.js","sourcesContent":["import React from 'react'\n\ninterface MemberProps {\ndescription: string |undefined\n\nname: string |undefined\n}\n\nconst Member: React.FC<MemberProps> = ({name, description}) => {\n        return (<div className=\"member\">\n            <div className=\"member-info\">\n                <h2>{name}</h2>\n                <p>{description}</p>\n            </div>\n            \n        </div>);\n}\nexport default Member","import React from 'react'\n\ninterface MemberImageProps {\nname: string |undefined;\nimage: string |undefined;\n}\n\nconst MemberImage: React.FC<MemberImageProps> = ({name, image}) => {\n        return (<div className=\"format-member\">\n            <img src={image} alt=\"member\" className='member-image'/>\n            <h3>{name}</h3>\n        </div>);\n}\nexport default MemberImage","import React, {useEffect, useContext, useState} from 'react'\nimport Member from './components/Member'\nimport MemberImage from './components/MemberImage'\nimport {UserContext} from './App'\nimport Emails from './components/Emails'\ninterface TeamProps {\n\n}\n\ninterface User {\n    description: string\n    image: string\n    img_location: string\n    name: string\n    video: string\n} \n\nconst Team: React.FC<TeamProps> = ({}) => {\n    const [users, setUsers] = useState<User[] | undefined>([])\n    const [images, setImages] = useState<Partial<User>[] | undefined>([])\n    const context = useContext(UserContext)\n    useEffect(() => {\n        if (context?.status === \"LOADED\") {\n            console.log(context.users)\n            setUsers(context.users)\n            setImages(context.users?.map((user) => {return {image:user.image, name:user.name}}))\n        }\n        \n    }, [context])\n        return (<div className=\"our-team\"><h1>Meet Our Team</h1>\n        <div className=\"images-members\">{images?.map((image) => {\n            return (\n                <MemberImage image={image.image} name={image.name}/>\n            )\n        })}</div>\n        <div className=\"members\">\n        {users?.map((user) => {\n            return (\n                <Member name={user.name} description={user.description}/>\n            )\n        })}\n\n        </div>\n       \n        <Emails />\n            </div>);\n}\nexport default Team","import React, {useState, useEffect, lazy, Suspense} from 'react'\nimport axios from './axInstance'\nimport Axios from 'axios'\n\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport createHistory from 'history/createBrowserHistory'\nimport \"./css/navigation.scss\"\nimport './css/mission.scss'\nimport './css/emails.scss'\nimport './css/team.scss'\nimport './css/footer.scss'\nimport './css/upcoming.scss'\nimport Team from './Team'\n\n\n\n\nconst Navigation  = lazy(() => import('./components/Navigation'))\n\n\n\n\nconst  Home = lazy(() => import('./Home'))\n\nconst Event = lazy(() => import('./components/Events/Event'))\n\nconst Admin = lazy(() => import('./components/Admin/Admin'))\n\nconst BlogContainer = lazy(() => import('./components/Blogs/BlogContainer'))\n\nconst Footer = lazy(() => import('./components/Footer'))\nconst Contact = lazy(() => import('./components/Contact'))\n\nexport const history = createHistory()\n\ninterface AppProps {\n\n}\n\n\ntype ContextState = {\n    status:\"LOADING\" | 'ERROR'\n} | {\n    status:\"LOADED\"; events?:{\n        event_date: Date;\n        event_id:number;\n        event_name:string\n        int_total:number;\n        url:string;\n        image: string\n        iframe_form?:string\n        upcoming:boolean;\n    }[];\n    blogs?: {\n        blog_date: Date;\n        blog_id:number;\n        blog_title:string;\n        name:string;\n        url:string;\n        image:string\n    }[];\n    users?:{\n        description:string;\n        img_location:string;\n        name:string\n        image:string;\n        video:string;\n    }[]\n    getCurrentBlog?():any\n}\n\nexport interface Blog {\n    date: string;\n    id:number;\n    title:string;\n    name:string;\n    url:string;\n    details:string;\n    \n}\n\nexport interface eventI {\n    event_date: Date;\nevent_id:number;\nevent_name:string\nint_total:number;\nurl:string;\nimage: string\niframe_form?:string;\nupcoming:boolean;\n}\nexport type EventInterface  = {\n    status:\"LOADING\" | \"ERROR\" } | \n    {\n    status:\"LOADED\";\n    event:eventI\n    urlData?:string\n    }\n\n    \nexport type EventUpcomingI  = {\n    status:\"LOADING\" | \"ERROR\" \n} | {\n    status:\"LOADED\"\n    events:eventI[]\n}\n\ntype CurrentEvent = {\n    getEvents(data:eventI, urlData?:string):void\n}\ninterface getBlog {\n    getCurrentBlog(data:Blog):any\n}\n\ntype Carousel = {\n    status:\"LOADING\" | \"ERROR\" } | {\n        status:\"LOADED\"\n        images:string[]\n    }\n\nexport const SelectedContext = React.createContext('events')\nexport const EventContext = React.createContext<ContextState | null>(null)\nexport const UserContext = React.createContext<ContextState | null>(null)\nexport const BlogContext = React.createContext<ContextState | null>(null)\nexport const CurrentBlogContext = React.createContext<getBlog| null>(null)\nexport const CurrentEventContext = React.createContext<CurrentEvent | null>(null)\nexport const UpcomingContext = React.createContext<EventUpcomingI | null>(null)\nexport const CarouselContext = React.createContext<Carousel | null>(null)\nconst fallBack = () => {\n    return (\n        <p>Loading...</p>\n    )\n}\n\nconst App = () =>  {\n\n  \n    const [blogs, setBlogs] = useState<ContextState>({status:\"LOADING\"})\n    const [events, setEvents] = useState<ContextState>({status:\"LOADING\"})\n    const [users, setUsers] = useState<ContextState>({status:\"LOADING\"})\n\n    const [currentEvent, setCurrentEvent] = useState<EventInterface>({status:\"LOADING\"})\n    const [upcomingEvents, setUpcomingEvents] = useState<EventUpcomingI>({status:\"LOADING\"});\n    const [carousel, setCarousel] = useState<Carousel>({status:\"LOADING\"})\n\n    useEffect(() => {\n        \n        setBlogs({status:\"LOADING\"})\n        setEvents({status:\"LOADING\"})\n        setUsers({status:\"LOADING\"})\n        \n        let isMounted = true\n        let source = Axios.CancelToken.source()\n        if (isMounted) {\n            axios.get('/users').then((response) => {\n                setUsers({status:\"LOADED\", users:response.data})\n            })\n            axios.get('/blogs', { cancelToken:source.token}).then((response) => {\n                            setBlogs({status:\"LOADED\", blogs:response.data})\n                            \n                        })\n            axios.get('/carousel', { cancelToken:source.token}).then((res) => {\n                setCarousel({status:\"LOADED\", images:res.data})\n\n            })\n\n            axios.get('/events', { cancelToken:source.token}).then((response) => {\n                setEvents({status:\"LOADED\", events:response.data})\n                setUpcomingEvents({status:\"LOADED\", events:response.data.filter((event:eventI) => event.upcoming === true)})\n                if (window.location.href.includes(\"events\")) {\n                    let eventName = window.location.href.split('/').slice(-1)[0]\n                    console.log(eventName)\n\n                    let event:eventI = response.data.filter((event:eventI) => event.event_name.split(\" \").join(\"-\").toLowerCase() === eventName\n                    )[0]\n                    Axios.get(event.url).then((response) => {\n                        setCurrentEvent({status:\"LOADED\", event:event, urlData:response.data})\n                    })\n                \n                   \n                    \n\n                }\n        \n        })\n        return () => {\n                isMounted = false\n                source.cancel()\n        }\n\n}},[])\n    const getEvents = (data:eventI, urlData:string) => {\n        console.log(data)\n        setCurrentEvent({status:\"LOADED\", event:data, urlData:urlData})\n\n    }\n    return (\n        <div>\n            <Suspense fallback={fallBack}>\n                <Router>\n                    <BlogContext.Provider value={blogs}>\n                <EventContext.Provider value={events} >\n                <UserContext.Provider value={users}>\n                <CurrentEventContext.Provider value={{getEvents}}>\n                <UpcomingContext.Provider value={upcomingEvents}>\n                <CarouselContext.Provider value={carousel}>\n            <Route exact path=\"/\">\n            <Navigation />\n            <Home />\n            <Footer />\n            </Route>\n            <Route path=\"/admin\">\n                <Admin />\n            </Route>\n\n            <Route path=\"/our-team\">\n                <Navigation />\n                <Team />\n                <Footer />\n            </Route>\n            <Route path=\"/blogs\">\n                <Navigation />\n                <BlogContainer />\n                <Footer />\n\n            </Route>\n            <Route exact path=\"/events/:name\">\n                \n                <Navigation />\n                \n                <Event data={currentEvent}/>\n                \n                <Footer />\n                \n            </Route>\n            \n            <Route exact path=\"/contact\">\n            <Navigation />\n                <Contact />\n                <Footer />\n            </Route>\n            </CarouselContext.Provider>\n            </UpcomingContext.Provider>\n            </CurrentEventContext.Provider>\n            </UserContext.Provider>\n            </EventContext.Provider>\n            </BlogContext.Provider>\n            </Router>\n            </Suspense>\n        </div>\n)};\n\n\nexport default App\n","import React, {useRef} from 'react'\nimport axios from '../axInstance'\ninterface EmailsProps {\n\n}\n\nconst Emails: React.FC<EmailsProps> = ({}) => {\n        const inputEl = useRef<any>('')\n        const sendEmail = () => {\n                const signedUp = document.getElementById('signed-up') as HTMLHeadElement\n                let validEmail = new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(inputEl.current.value)\n                if (!validEmail) {\n                        signedUp.innerHTML = \"Please enter a valid email address.\"\n                        signedUp.classList.add('errors')\n                        signedUp.style.display = 'block'\n                        window.scrollTo(0,document.body.scrollHeight);\n                return\n                }\n                \n                axios.post('/email', {\n                        email: inputEl.current.value\n                }).then(() => {\n                inputEl.current.value = \"\"\n               signedUp.classList.remove('errors')\n                signedUp.innerHTML = \"Thank you for signing up! You will receive an email shortly.\"\n                signedUp.style.display = 'block'\n                window.scrollTo(0,document.body.scrollHeight);\n                setTimeout(() => {signedUp.innerHTML = ''}, 3000)\n                })\n               \n        }\n        return (<div id=\"emails\">\n                <h2>Sign up to receive emails about our upcoming events.</h2>\n                <input type=\"email\" placeholder=\"email@example.com\" ref={inputEl}/>\n                <input type=\"submit\" value=\"Join\" onClick={sendEmail}/>\n                <h3 style={{display: 'none'}}id=\"signed-up\"></h3>\n        </div>);\n}\nexport default Emails","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n","import axios from 'axios';\n\n\nexport default axios.create({\n    baseURL:'http://localhost:8000',\n    headers:{\"Content-type\":\"application/json\"}\n})"],"sourceRoot":""}