{"version":3,"sources":["components/Events/Interest.tsx","components/Events/Event.tsx","getCookie.ts"],"names":["Interest","id","useState","clicked","setClicked","intNumber","setIntNumber","sentence","setSentence","useEffect","console","log","axios","get","params","then","response","data","int_total","getCookie","className","onClick","e","put","d","Date","setTime","getTime","document","cookie","toUTCString","sendRequest","Event","event","setEvent","getData","setData","status","urlData","src","image","alt","event_name","dangerouslySetInnerHTML","__html","style","display","iframe_form","title","event_id","Emails","cname","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf"],"mappings":"qLAgEeA,EArD2B,SAAC,GAAU,IAATC,EAAQ,EAARA,GAAQ,EAClBC,oBAAS,GADS,mBACzCC,EADyC,KAChCC,EADgC,OAEdF,oBAAkB,GAFJ,mBAEzCG,EAFyC,KAE9BC,EAF8B,OAKjBJ,mBAAS,IALQ,mBAK1CK,EAL0C,KAKhCC,EALgC,KA+C5C,OA1BJC,qBAAU,WACNC,QAAQC,IAAIV,GACZW,IAAMC,IAAI,cAAe,CAACC,OAAO,CAC7Bb,QACAc,MAAK,SAAAC,GACLV,EAAaU,EAASC,KAAKC,cAM/BR,QAAQC,IAAIN,GAGO,KADAc,YAAU,SAAD,OAAUlB,KAEnCG,GAAW,GAOVI,EAAYH,EAAa,GAAmB,IAAdA,EAAlB,8BAA0DA,EAA1D,qDAAiHA,EAAjH,0BAEd,CAACA,EAAWJ,IAEN,8BAEJ,sBAAKmB,UAAU,WAAf,UAA0B,4BAAIb,IAAcJ,EAAQ,8BAAK,oEAA+C,gCAAK,+FAAqE,wBAAQiB,UAAU,aAAaC,QAAS,SAACC,GAAD,OA1C9M,SAACA,GAEbV,IAAMW,IAAI,gBAAiB,CAACtB,OAAKc,MAAK,SAAAC,GAClCV,EAAaU,EAASC,KAAKC,cAE/B,IAAIM,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAa,OACzBC,SAASC,OAAT,gBAA2B5B,EAA3B,YAAiCA,EAAjC,oBAA+CuB,EAAEM,eAClD1B,GAAW,GAkCuN2B,IAA/C,uCC3B/KC,UAtBqB,SAAC,GAAY,IAAXf,EAAU,EAAVA,KAAU,EAClBf,mBAAwB,MADN,mBACrC+B,EADqC,KAC9BC,EAD8B,OAEjBhC,mBAAiB,IAFA,mBAErCiC,EAFqC,KAE5BC,EAF4B,KAWxC,OARA3B,qBAAU,WACc,WAAhBQ,EAAKoB,SACLH,EAASjB,EAAKgB,OACdvB,QAAQC,IAAIM,EAAKgB,MAAMf,WAEnBkB,EAAQnB,EAAKqB,YAEtB,CAACL,EAAOhB,IACH,sBAAKG,UAAU,QAAf,UACJ,qBAAKmB,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAOO,MAAOC,IAAI,UAC5B,oBAAIxC,GAAG,aAAP,gBAAqBgC,QAArB,IAAqBA,OAArB,EAAqBA,EAAOS,aACxB,qBAAKzC,GAAG,aAAa0C,wBAAyB,CAACC,OAAOT,KACtD,oBAAIU,MAAO,CAACC,QAA6B,MAAhB,OAALb,QAAK,IAALA,OAAA,EAAAA,EAAOc,aAAiB,OAAO,SAAnD,yEACA,wBAAQC,MAAM,gBAAgBH,MAAO,CAACC,QAA6B,MAAhB,OAALb,QAAK,IAALA,OAAA,EAAAA,EAAOc,aAAiB,OAAO,SAASR,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAOc,cAClG,cAAC,EAAD,CAAU9C,GAAE,OAAEgC,QAAF,IAAEA,OAAF,EAAEA,EAAOgB,WAErB,cAACC,EAAA,QAAD,S,gCC9BD,SAAS/B,EAAUgC,GAI9B,IAHA,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmB1B,SAASC,QACzB0B,MAAM,KACrBC,EAAI,EAAGA,EAAGH,EAAGI,OAAQD,IAAK,CAEhC,IADA,IAAIE,EAAIL,EAAGG,GACY,MAAhBE,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAElB,GAAwB,IAApBF,EAAEG,QAAQT,GACZ,OAAOM,EAAEE,UAAUR,EAAKK,OAAQC,EAAED,QAGtC,MAAO,GAbX","file":"static/js/11.6f30e106.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nimport axios from '../../axInstance'\r\nimport getCookie from '../../getCookie'\r\n\r\n\r\n\r\ninterface InterestProps {\r\n    id: number | undefined\r\n}\r\n\r\nconst Interest: React.FC<InterestProps> = ({id}) => {\r\n    const [clicked, setClicked] = useState(false)\r\n    const [intNumber, setIntNumber] = useState<number>(-1)\r\n\r\n    \r\n   const [sentence, setSentence] = useState(\"\")\r\n\r\n    const sendRequest = (e:any) => {\r\n        \r\n            axios.put('/new-interest', {id}).then(response => {\r\n                setIntNumber(response.data.int_total)\r\n            })\r\n            var d = new Date();\r\n            d.setTime(d.getTime() + (5000*24*60*60*1000));\r\n            document.cookie = `event-${id}=${id};expires=${d.toUTCString()}`\r\n           setClicked(true)\r\n    }\r\n    \r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        console.log(id)\r\n        axios.get('/int-number', {params:{\r\n            id\r\n        }}).then(response => {\r\n            setIntNumber(response.data.int_total)\r\n            \r\n        })\r\n        \r\n        \r\n       \r\n        console.log(intNumber)\r\n        \r\n        const eventExist = getCookie(`event-${id}`)\r\n        if (eventExist !== \"\") {\r\n           setClicked(true)\r\n                \r\n        }\r\n\r\n           \r\n           \r\n\r\n            setSentence(intNumber! > 1 || intNumber === 0? `There are currently ${intNumber} people interested.`: ` There is currently ${intNumber} person interested.`)\r\n        \r\n        },[intNumber, id])\r\n    \r\n        return (<div >\r\n            \r\n            <div className=\"interest\"><p>{sentence}</p>{clicked?<div><p>Thanks for showing your interest!</p></div>:<div><p>Let us know you're interested in this event by clicking below.</p><button className=\"click-here\" onClick={(e) => sendRequest(e)}>I am Interested!</button></div>}\r\n        </div>\r\n        </div>);\r\n}\r\nexport default Interest","import React, {useEffect, useState} from 'react'\r\nimport {EventInterface, eventI} from '../../App'\r\nimport Axios from 'axios'\r\nimport \"../../css/event.scss\"\r\nimport Emails from '../Emails'\r\nimport Interest from './Interest'\r\ninterface EventProps {\r\n \r\n    data: EventInterface\r\n}\r\n\r\nconst Event: React.FC<EventProps> = ({data}) => {\r\n    const [event, setEvent] = useState<eventI | null>(null)\r\n    const [getData, setData] = useState<string>(\"\")\r\n        useEffect(() => {\r\n            if (data.status === \"LOADED\") {\r\n                setEvent(data.event)\r\n                console.log(data.event.int_total) \r\n\r\n                    setData(data.urlData!)\r\n            }\r\n        }, [event, data])\r\n        return (<div className=\"event\">\r\n            <img src={event?.image} alt=\"event\" />\r\n            <h2 id=\"event-name\">{event?.event_name}</h2>\r\n                <div id=\"event-data\" dangerouslySetInnerHTML={{__html:getData}}></div>\r\n                <h3 style={{display:event?.iframe_form===\"\"?\"none\":\"block\"}}>Are you interested in this event? Complete our survey form!</h3>\r\n                <iframe title=\"donation page\" style={{display:event?.iframe_form===\"\"?\"none\":\"block\"}}src={event?.iframe_form}></iframe>\r\n                <Interest id={event?.event_id}/>\r\n                \r\n                <Emails />\r\n            </div>);\r\n}\r\nexport default Event","export default function getCookie(cname:string) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }"],"sourceRoot":""}