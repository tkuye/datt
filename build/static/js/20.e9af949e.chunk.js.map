{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Admin/AdminGetter.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","AdminGetter","item","getData","useState","clicked","setClicked","display","setDisplay","data","setData","blogContext","useContext","BlogContext","eventContext","EventContext","string","className","charAt","toUpperCase","slice","onClick","console","log","status","events","map","event","Axios","get","url","then","response","html","decodeURIComponent","event_name","Date","event_date","toDateString","src","image","alt","id","blogs","blog","blog_title","blog_date","style","marginBottom"],"mappings":"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","file":"static/js/20.e9af949e.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, {useState, useContext} from 'react'\r\nimport axios from '../../axInstance'\r\nimport Axios from 'axios'\r\nimport ArrayMove from 'array-move'\r\nimport {BlogContext, EventContext}  from '../../App'\r\n\r\ninterface AdminGetterProps {\r\n    item: string\r\n    getData(data:any, type: string):any\r\n}\r\n\r\nconst AdminGetter: React.FC<AdminGetterProps> = ({item, getData}) => {\r\n    \r\n    const [clicked, setClicked] = useState(false)\r\n    const [display, setDisplay] = useState('none')\r\n    const [data, setData] = useState<any>(<div></div>)\r\n    const [htmlData, setHtmlData] = useState(<div></div>)\r\n    let blogContext = useContext(BlogContext)\r\n    let eventContext = useContext(EventContext)\r\n\r\n     function capitalizeFirstLetter(string:string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n      }\r\n\r\n      const editData = (data:any, imgUrl:string = \"\") => {\r\n        getData(data, item)\r\n      }\r\n      const getItems = () => {\r\n          console.log(item)\r\n      if (clicked) return\r\n          setDisplay('block')\r\n       switch (item) {\r\n           case 'events':\r\n               if (eventContext?.status === \"LOADED\"){\r\n                   console.log(eventContext.events)\r\n                   setData(eventContext.events?.map(event => {\r\n                    let ourData = \"\"\r\n\r\n                const sendBlogData = () => {\r\n                    \r\n                    Axios.get(event.url).then(response => {\r\n                        getData({...event, html:response.data}, item)\r\n                    })\r\n                }\r\n                   \r\n                return (\r\n                    <div>\r\n\r\n                        <h2 className=\"clickable\" onClick={sendBlogData}>{decodeURIComponent(event.event_name)}</h2>\r\n                        <h3>{new Date(event.event_date).toDateString()}</h3>\r\n                        <img src={event.image} alt=\"preview\" id=\"detail-photo\" />\r\n                        </div>\r\n                )\r\n                \r\n                \r\n            }))\r\n               }\r\n               break\r\n            case 'blogs':\r\n                if (blogContext?.status === \"LOADED\") {\r\n                    console.log(blogContext.blogs)\r\n                   setData(blogContext.blogs?.map(blog => {\r\n                            let ourData = \"\"\r\n\r\n                        const sendBlogData = () => {\r\n                            \r\n                            Axios.get(blog.url).then(response => {\r\n                                getData({...blog, html:response.data}, item)\r\n                            })\r\n                        }\r\n                           \r\n                        return (\r\n                            <div>\r\n\r\n                                <h2 className=\"clickable\" onClick={sendBlogData}>{decodeURIComponent(blog.blog_title)}</h2>\r\n                                <h3>{new Date(blog.blog_date).toDateString()}</h3>\r\n                                <img src={blog.image} alt=\"preview\" id=\"detail-photo\" />\r\n                                </div>\r\n                        )\r\n                        \r\n                        \r\n                    }))\r\n                }   \r\n                \r\n\r\n       }\r\n        setClicked(true)\r\n      }\r\n      \r\n        \r\n        return (\r\n        <div className=\"admin-getter\"><h1>{capitalizeFirstLetter(item)}</h1>\r\n        <p onClick={getItems} id=\"show\">Click here to show all the {item}.</p>\r\n        <div id=\"line-display\" style={{display:display}}>\r\n        <div id=\"inserted-content\" ></div>\r\n        </div>\r\n        \r\n        <div id=\"inserted-content\" style={{marginBottom:'20px'}}>{data}</div>\r\n        </div>\r\n        );\r\n}\r\n\r\n\r\nexport default AdminGetter"],"sourceRoot":""}